
#!/bin/bash

. ~/git-prompt.sh

export PS_THEME='\033[01;31m'
DATE_HOUR=$(date +%-I)
DATE_MIN=$(date +%M)
DATE_SEC=$(date +%S)

TIME_NOCOLOR=`echo -en $(date +%-I:%M:%S %p)`
TIME_CLR=`echo -en "\033[38;5;15m\033[38;5;15m"$(date +%-I)"\033[38;5;9m:\033[m\033[38;5;15m"$(date +%M)"\033[38;5;9m:\033[m\033[38;5;15m"$(date +%S)" \033[m"$(__check_AMPM)"\033[m $PS_THEME‚îõ\033[m\r"`

function __ext_exit_code(){
	RETVAL=$?
	if [ $RETVAL != 0 ]; then
		case $RETVAL in
#	0)
#		EMSG='All Good'
#		tput cuf $[$[$COLUMNS - $(echo -en "*["$RETVAL"] - "$EMSG"" | wc -L)]/2]; echo -en "\033[38;5;15m\033[38;5;11m*\033[38;5;15m[\033[38;5;10m"$RETVAL"\033[38;5;15m] - \033[38;5;10m"$EMSG"\033[m\n"
#		unset EMSG
#		;;
#\033[38;5;15m
		1)
			EMSG='General error'
			tput cuf $[$[$COLUMNS - $(echo -en "*["$RETVAL"] - "$EMSG"" | wc -L)]/2]; echo -en "\033[38;5;11m*\033[38;5;15m[\033[38;5;9m"$RETVAL"\033[38;5;15m] - \033[38;5;9m"$EMSG"\033[m\n"
			unset EMSG
			;;
		2)
			EMSG='Misuse of shell builtins (according to BASH documentations)'
			tput cuf $[$[$COLUMNS - $(echo -en "*["$RETVAL"] - "$EMSG"" | wc -L)]/2]; echo -en "\033[38;5;11m*\033[38;5;15m[\033[38;5;9m"$RETVAL"\033[38;5;15m] - \033[38;5;9m"$EMSG"\033[m\n"
			unset EMSG
			;;
		126)
			EMSG='Command invoked cannot execute'
			tput cuf $[$[$COLUMNS - $(echo -en "*["$RETVAL"] - "$EMSG"" | wc -L)]/2]; echo -en "\033[38;5;11m*\033[38;5;15m[\033[38;5;9m"$RETVAL"\033[38;5;15m] - \033[38;5;9m"$EMSG"\033[m\n"
			unset EMSG
			;;
		128)
			EMSG='Command not found'
			tput cuf $[$[$COLUMNS - $(echo -en "*["$RETVAL"] - "$EMSG"" | wc -L)]/2]; echo -en "\033[38;5;15m$(echo "EXIT CODE" | toilet -f wideterm) \033[38;5;11m*\033[38;5;15m[\033[38;5;9m"$RETVAL"\033[38;5;15m] - \033[38;5;9m"$EMSG"\033[m\n"
			unset EMSG
			;;
		127)
			EMSG='Invalid argument to exit'
			tput cuf $[$[$COLUMNS - $(echo -en "*["$RETVAL"] - "$EMSG"" | wc -L)]/2]; echo -en "\033[38;5;11m* \033[38;5;15m[\033[38;5;9m"$RETVAL"\033[38;5;15m] - \033[38;5;9m"$EMSG"\033[m"
			unset EMSG
			;;
		128?*)
			EMSG='Fatal error signal "n"'
			tput cuf $[$[$COLUMNS - $(echo -en "*["$RETVAL"] - "$EMSG"" | wc -L)]/2]; echo -en "\033[38;5;11m*\033[38;5;15m[\033[38;5;9m"$RETVAL"\033[38;5;15m] - \033[38;5;9m"$EMSG"\033[m\n"
			unset EMSG
			;;
		130)
			EMSG='Script Terminated by [CTRL]+[C]'
			tput cuf $[$[$COLUMNS - $(echo -en "*["$RETVAL"] - "$EMSG"" | wc -L)]/2]; echo -en "\033[38;5;11m*\033[38;5;15m[\033[38;5;9m"$RETVAL"\033[38;5;15m] - \033[38;5;9m"$EMSG"\033[m\n"
			unset EMSG
			;;
		255)
			EMSG='Exit status out of range'
			tput cuf $[$[$COLUMNS - $(echo -en "*["$RETVAL"] - "$EMSG"" | wc -L)]/2]; echo -en "\033[38;5;11m*\033[38;5;15m[\033[38;5;9m"$RETVAL"\033[38;5;15m] - \033[38;5;9m"$EMSG"\033[m\n"
			unset EMSG
			;;
		esac
	fi
}

function __chk_uid(){
	if [ $UID -ne 0 ]; then
		echo -en "\033[01;32m$\033[m"
	else
		echo -en "\033[38;5;15m\033[01;31m#\033[m"
	fi
}

function __gitdir(){
	if [ -d ./.git ]; then
		__git_ps1
	fi
}

function cd(){
	if [ $1 == 'op' ]; then
		DIR_TO_CD=$OLDPWD
		builtin cd "$DIR_TO_CD"
		\ls -Fa --color=always --group-directories-first
		unset DIR_TO_CD
	else
		DIR_TO_CD=$1
		builtin cd "$DIR_TO_CD"
		\ls -Fa --color=always --group-directories-first
		unset DIR_TO_CD
	fi
}
#
#‚îÉ
#
#‚îì
#$(echo $(__exitcode))
function __exitcode(){
	RETVAL=$?
	case $RETVAL in
	0)
		echo -en "\033[38;5;15m\033[01;37m[\033[01;32m0\033[01;37m]\033[m$PS_THEME‚îÅ\033[m"
		;;
	*)
		echo -en "\033[38;5;15m\033[01;37m[\033[01;31m$RETVAL\033[01;37m]\033[38;5;11m* \033[m$PS_THEME‚îÅ\033[m"
		;;
	esac
}
#

DIRBAR=$(tput cuf 2; echo -en " \033[01;33mDIR\033[37m: \033[33m$(dirs)\033[m ")
TIME=$(tput cuf $[$[$COLUMNS-$(echo $(date) | wc -L)]-2]; echo -en $(date))

function pcom(){
	printf "\n$PS_THEME‚îè"; printf '‚îÅ%.s' $(seq 3 $COLUMNS);echo -en "‚îì\r" 
#	printf "\n$PS_THEME‚îè"; printf '‚îÅ%.s' $(seq 3 $COLUMNS);echo -e "‚îì"
#	__time1 
	# echo -e "\r${DIRBAR}\r$TIME"
#	echo -e "\n"
	#echo -en "$PS_THEME‚îó"
}

#export PROMPT_COMMAND='pcom'
function __setps1(){
	if [ ! $ps1 ]; then
		ps1=$PS1
	fi
	if [ $PROMPT_COMMAND ]; then
		prompt_command=$PROMPT_COMMAND
	fi
	export PROMPT_COMMAND='newpcom'
	export PS1="$PS_THEME‚îó\`__exitcode\` \`__chk_uid\`\033[01;37m: \033[m"
}

function newpcom(){
#	echo
#	__ext_exit_code
	pcom
	tput cuf 2; echo -en " \033[müìÇ\033[01;37m: \033[m\033[38;5;11m$(dirs)\033[m$(__git_ps1) \r"
#	echo -en $TIME
	tput cuf $[$[$COLUMNS-$(echo " $(date +%D) " | wc -L)]-2]; echo -en " $(date +%D) \r"
	echo -en "\n"
	__time1
}

function __time1(){
	TIMECUF=$[$COLUMNS-$(echo -en $(date +"%-I:%M:%S %p ‚îõ") | wc -L)]
	if [ `echo $(date +%p)` == 'PM' ]; then
		tput cuf "$TIMECUF"; echo -en "$TIME_CLR"
#		tput cuf "$TIMECUF"; echo -en "\033[38;5;15m\033[38;5;15m$DATE_HOUR\033[38;5;9m:\033[m\033[38;5;15m$DATE_MIN\033[38;5;9m:\033[m\033[38;5;15m$DATE_SEC \033[38;5;39m$(__check_AMPM)\033[m $PS_THEME‚îõ\033[m\r"
#		tput cuf "$TIMECUF"; echo -en "\033[38;5;15m\033[38;5;15m$DATE_HOUR\033[38;5;9m:\033[m\033[38;5;15m$DATE_MIN\033[38;5;9m:\033[m\033[38;5;15m$DATE_SEC \033[38;5;39m$(date +%p)\033[m\r"
	else
		tput cuf "$TIMECUF"; echo -en "\033[38;5;15m\033[38;5;15m$DATE_HOUR\033[38;5;9m:\033[m\033[38;5;15m$DATE_MIN\033[38;5;9m:\033[m\033[38;5;15m$DATE_SEC \033[38;5;226m"$(__check_AMPM)"\033[m $PS_THEME‚îõ\033[m\r"
#		tput cuf "$TIMECUF"; echo -en "\033[38;5;15m\033[38;5;15m$DATE_HOUR\033[38;5;9m:\033[m\033[38;5;15m$DATE_MIN\033[38;5;9m:\033[m\033[38;5;15m$DATE_SEC \033[38;5;226m$(date +%p)\033[m\r"
#\033[m$PS_THEME‚îõ\033[m"
	fi
}


#__setps1
#‚îõ
#‚î£
#‚î´
#‚î≥
#‚îª
#‚ïã






#TIME_PM=$(echo -en "[01;38;5;15m$DATE_HOUR:$DATE_MIN:$DATE_SEC [38;5;39mPM[m")
#TIME_AM=$(echo -en "[01;38;5;15m$DATE_HOUR[m[01;38;5;15m:[m[38;5;15m$DATE_MIN[m[01;38;5;15m:[m[38;5;15m$DATE_SEC [38;5;226mAM[m")‚îÅ
#‚îÉ
#‚îè
#‚îì
#‚îó
#‚îõ
#‚î£
#‚î´
#‚î≥
#‚îª
#‚ïã
#‚îì#!/bin/bash

function __check_AMPM(){
	if [ `echo $(date +%p)` == 'PM' ]; then
		echo -en "\033[38;5;15m\033[m\033[38;5;39m"$(date +%p)"\033[m"
	else
		echo -en "\033[38;5;15m\033[m\033[38;5;226m"$(date +%p)"\033[m"
	fi
}
